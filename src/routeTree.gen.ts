/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as SignupImport } from "./routes/signup"
import { Route as LoginImport } from "./routes/login"
import { Route as IndexImport } from "./routes/index"
import { Route as DashboardLayoutImport } from "./routes/dashboard/_layout"
import { Route as LSiteNameIndexImport } from "./routes/l/$siteName/index"
import { Route as DashboardLayoutIndexImport } from "./routes/dashboard/_layout/index"
import { Route as DashboardLayoutSettingsIndexImport } from "./routes/dashboard/_layout/settings/index"

// Create Virtual Routes

const DashboardImport = createFileRoute("/dashboard")()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: "/dashboard",
  path: "/dashboard",
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: "/_layout",
  getParentRoute: () => DashboardRoute,
} as any)

const LSiteNameIndexRoute = LSiteNameIndexImport.update({
  id: "/l/$siteName/",
  path: "/l/$siteName/",
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutIndexRoute = DashboardLayoutIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutSettingsIndexRoute =
  DashboardLayoutSettingsIndexImport.update({
    id: "/settings/",
    path: "/settings/",
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/login": {
      id: "/login"
      path: "/login"
      fullPath: "/login"
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    "/signup": {
      id: "/signup"
      path: "/signup"
      fullPath: "/signup"
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    "/dashboard": {
      id: "/dashboard"
      path: "/dashboard"
      fullPath: "/dashboard"
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    "/dashboard/_layout": {
      id: "/dashboard/_layout"
      path: "/dashboard"
      fullPath: "/dashboard"
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof DashboardRoute
    }
    "/dashboard/_layout/": {
      id: "/dashboard/_layout/"
      path: "/"
      fullPath: "/dashboard/"
      preLoaderRoute: typeof DashboardLayoutIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    "/l/$siteName/": {
      id: "/l/$siteName/"
      path: "/l/$siteName"
      fullPath: "/l/$siteName"
      preLoaderRoute: typeof LSiteNameIndexImport
      parentRoute: typeof rootRoute
    }
    "/dashboard/_layout/settings/": {
      id: "/dashboard/_layout/settings/"
      path: "/settings"
      fullPath: "/dashboard/settings"
      preLoaderRoute: typeof DashboardLayoutSettingsIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface DashboardLayoutRouteChildren {
  DashboardLayoutIndexRoute: typeof DashboardLayoutIndexRoute
  DashboardLayoutSettingsIndexRoute: typeof DashboardLayoutSettingsIndexRoute
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardLayoutIndexRoute: DashboardLayoutIndexRoute,
  DashboardLayoutSettingsIndexRoute: DashboardLayoutSettingsIndexRoute,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

interface DashboardRouteChildren {
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/login": typeof LoginRoute
  "/signup": typeof SignupRoute
  "/dashboard": typeof DashboardLayoutRouteWithChildren
  "/dashboard/": typeof DashboardLayoutIndexRoute
  "/l/$siteName": typeof LSiteNameIndexRoute
  "/dashboard/settings": typeof DashboardLayoutSettingsIndexRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/login": typeof LoginRoute
  "/signup": typeof SignupRoute
  "/dashboard": typeof DashboardLayoutIndexRoute
  "/l/$siteName": typeof LSiteNameIndexRoute
  "/dashboard/settings": typeof DashboardLayoutSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexRoute
  "/login": typeof LoginRoute
  "/signup": typeof SignupRoute
  "/dashboard": typeof DashboardRouteWithChildren
  "/dashboard/_layout": typeof DashboardLayoutRouteWithChildren
  "/dashboard/_layout/": typeof DashboardLayoutIndexRoute
  "/l/$siteName/": typeof LSiteNameIndexRoute
  "/dashboard/_layout/settings/": typeof DashboardLayoutSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | "/login"
    | "/signup"
    | "/dashboard"
    | "/dashboard/"
    | "/l/$siteName"
    | "/dashboard/settings"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | "/login"
    | "/signup"
    | "/dashboard"
    | "/l/$siteName"
    | "/dashboard/settings"
  id:
    | "__root__"
    | "/"
    | "/login"
    | "/signup"
    | "/dashboard"
    | "/dashboard/_layout"
    | "/dashboard/_layout/"
    | "/l/$siteName/"
    | "/dashboard/_layout/settings/"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  LSiteNameIndexRoute: typeof LSiteNameIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  DashboardRoute: DashboardRouteWithChildren,
  LSiteNameIndexRoute: LSiteNameIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/signup",
        "/dashboard",
        "/l/$siteName/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_layout"
      ]
    },
    "/dashboard/_layout": {
      "filePath": "dashboard/_layout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_layout/",
        "/dashboard/_layout/settings/"
      ]
    },
    "/dashboard/_layout/": {
      "filePath": "dashboard/_layout/index.tsx",
      "parent": "/dashboard/_layout"
    },
    "/l/$siteName/": {
      "filePath": "l/$siteName/index.tsx"
    },
    "/dashboard/_layout/settings/": {
      "filePath": "dashboard/_layout/settings/index.tsx",
      "parent": "/dashboard/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
